{"version":3,"sources":["images/logo.jpg","components/header/index.js","components/header/header.js","components/loader/index.js","components/loader/loader.js","components/freshNews/index.js","components/freshNews/freshNews.js","components/pages/news-list-page.js","actions/index.js","components/hacker-news-service-context/hackerNewsServiceContext.js","hoc/index.js","hoc/witHackerNewsService.js","components/utils/utils.js","components/utils/index.js","components/comments/comments.js","components/comments/index.js","components/pages/open-news-page.js","images/me.jpeg","components/footer/index.js","components/footer/footer.js","components/app/app.js","components/app/index.js","services/hacker-news-service.js","services/index.js","reducers/updateFreshNews.js","reducers/index.js","store.js","index.js"],"names":["Header","className","to","src","logo","Loader","FreshNews","props","news","addId","newsLoading","newsError","FreshNewsContainer","map","item","Card","Body","Title","title","Text","by","score","link","onClick","event","target","name","Button","id","variant","NewsListPage","this","state","freshNews","Component","connect","dispatch","type","payload","addIdOfChoosenNews","React","createContext","HackerNewsServiceProvider","Provider","HackerNewsServiceConsumer","Consumer","withHackerNewsService","Wrapped","hackerNewsService","compose","funcs","comp","reduceRight","wrapped","f","SubComments","subcomment","comment","dangerouslySetInnerHTML","__html","text","Comments","comments","commentsLoading","fetchSubcomments","addSubcommentsId","CommentsContainer","button","classList","add","onClickButtonSubcomments","subcommentsNums","OpenNewsPage","newsId","fetchOpenedNews","setInterval","sessionStorage","getItem","console","log","res","window","location","pathname","split","pop","result","find","OpenNewsPageContainer","Img","url","CommentsBlock","ownProps","getCommentsList","then","data","fetchComments","catch","err","getSubcommentsList","fetchSubcommentsList","Footer","me","App","fetchNews","path","element","getNewsList","fetchNewsList","HackerNewsService","apiBase","a","getNumbersOfFreshNews","newArr","i","fetch","json","push","transformNews","getNumbersOfComments","resp","kids","length","transformComments","urlList","newsDate","Date","time","date","toString","img","parentId","parent","ok","Error","status","updateFreshNews","action","undefined","subcommentsId","newState","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.854ddf81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.eb202774.jpg\";","import Header from \"./header\";\r\n\r\nexport default Header","import React from \"react\";\r\nimport logo from \"../../images/logo.jpg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <Link to=\"/\"><img src={logo}></img></Link>\r\n            <h1>Что в мире творится?</h1>\r\n            <p>Находите самые актуальные новости, посвященные информатике и предпринимательству, а также, комментарии к ним!</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Loader from \"./loader\";\r\n\r\nexport default Loader","const Loader = () => {\r\n    return (\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import FreshNews from \"./freshNews\";\r\n\r\nexport default FreshNews","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport  Button  from \"react-bootstrap/button\";\r\nimport Loader from \"../loader\";\r\n\r\n\r\nconst FreshNews = (props) => { \r\n    const {news, addId, newsLoading, newsError} = props;\r\n    \r\n    let FreshNewsContainer = newsLoading & !newsError ?  \r\n        news.map (                \r\n            item => \r\n            <li key={item.id}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>{item.title}</Card.Title>\r\n                    <Card.Text>\r\n                    Author: <span>{item.by}</span><br />\r\n                    Rating: <span>{item.score}</span>\r\n                    </Card.Text>\r\n                    <Link to={item.link} onClick={(event) => addId(event.target.name)}><Button name ={item.id} variant=\"primary\">More</Button></Link>\r\n                </Card.Body>\r\n                </Card>\r\n            </li>\r\n        )\r\n        :\r\n        <Loader />\r\n    FreshNewsContainer =  newsError ? <h3>Ошибка при загрузке</h3>    : FreshNewsContainer\r\n        \r\n    return FreshNewsContainer\r\n}\r\nexport default FreshNews","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FreshNews from \"../freshNews\";\r\nimport { addIdOfChoosenNews } from \"../../actions\";\r\n\r\nexport class NewsListPage extends Component  {\r\n    render () {\r\n        const {state, addId} = this.props;\r\n        const {news, newsLoading, newsError} = state.freshNews     \r\n        return (\r\n            <div className=\"news-list\">\r\n                <ul className=\"news-list_ul\">\r\n                    <FreshNews news={news} addId={addId} newsLoading={newsLoading} newsError={newsError}/>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n} \r\n  \r\n  const mapDispatchToProps =(dispatch) => {\r\n      \r\n      return {\r\n        addId: (item) => dispatch(addIdOfChoosenNews(item))\r\n      }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsListPage)","const fetchNewsList = (data) => {\r\n    return {\r\n        type: 'FETCH_NEWS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst addIdOfChoosenNews = (item) => {\r\n    return {\r\n        type: 'ADD_NEWS_ID',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst fetchComments = (data) => {\r\n    return {\r\n        type: 'FETCH_COMMENTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchSubcommentsList = (data) => {\r\n    return {\r\n        type: 'FETCH_SUBCOMMENTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst addSubcommentsId = (id) => {\r\n    return {\r\n        type: 'ADD_SUBCOMMENTS_ID',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst fetchNews = (hackerNewsService) => () => (dispatch) => {\r\n    hackerNewsService.getNewsList()\r\n    .then((data) => dispatch(fetchNewsList(data)))\r\n    .catch((err) => console.log(err))       \r\n}\r\n\r\nconst fetchOpenedNews = (hackerNewsService, res) => () => (dispatch) => {\r\n    hackerNewsService.getCommentsList(res)\r\n    .then((data) => dispatch(fetchComments(data)))\r\n    .catch((err) => console.log(err))    \r\n}\r\n\r\nconst fetchSubcomments = (hackerNewsService, res) => () => (dispatch) => {\r\n    hackerNewsService.getSubcommentsList(res)\r\n    .then((data) => dispatch(fetchSubcommentsList(data)))\r\n    .catch((err) => console.log(err))    \r\n}\r\n\r\nexport {fetchNews, addIdOfChoosenNews, fetchOpenedNews, fetchSubcomments, addSubcommentsId}","import React from \"react\";\r\n\r\nconst {\r\n    Provider: HackerNewsServiceProvider,\r\n    Consumer: HackerNewsServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    HackerNewsServiceProvider,\r\n    HackerNewsServiceConsumer\r\n}","import withHackerNewsService from './witHackerNewsService'\r\n\r\nexport default withHackerNewsService","import React from \"react\";\r\nimport { HackerNewsServiceConsumer } from \"../components/hacker-news-service-context\";\r\n\r\nconst withHackerNewsService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <HackerNewsServiceConsumer>\r\n                {\r\n                    (hackerNewsService) => {\r\n                        return (<Wrapped {...props}\r\n                            hackerNewsService={hackerNewsService} />)\r\n                    }\r\n                }\r\n            </HackerNewsServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withHackerNewsService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n    };\r\n\r\nexport default compose","import compose from \"./utils\";\r\n\r\nexport default compose","import React from \"react\";\r\nimport Button from \"react-bootstrap/button\";\r\n    const SubComments = (props) => {  \r\n        const {subcomment} = props\r\n        if (!subcomment) {\r\n              return null\r\n        }           \r\n        else {\r\n         return (\r\n                props.subcomment.map(\r\n                comment =>                   \r\n                <div key={comment.id} className=\"open-news__comments\">\r\n                    <p className=\"open-subcomments-p\">Author: {comment.by}</p>\r\n                    <p className=\"open-subcomments-p\" dangerouslySetInnerHTML={{__html: comment.text}}></p>   \r\n                </div>  \r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\nconst Comments = (props) => {\r\n    let {comments, commentsLoading, fetchSubcomments, addSubcommentsId} = props;\r\n    const onClickButtonSubcomments = (event, comment) => {\r\n        event.target.classList.add('.hidden')\r\n        addSubcommentsId(event.target.name);\r\n        fetchSubcomments(comment)\r\n    }\r\n    const CommentsContainer = () => {       \r\n        return (         \r\n            comments.map(\r\n                comment =>                   \r\n                <div key={comment.id} className=\"open-news__comments\">\r\n                    <p className=\"open-comments-p\">Author: {comment.by}</p>\r\n                    <p className=\"open-comments-p\" dangerouslySetInnerHTML={{__html: comment.text}}></p>\r\n                    <Button className={comment.button} name={comment.id} onClick={(event) => onClickButtonSubcomments(event, comment.subcommentsNums)}>open comments</Button>\r\n                    <SubComments subcomment={comment.subcomment}/>\r\n                </div>  \r\n            )\r\n        )\r\n    }   \r\n    if (commentsLoading) {\r\n        return (            \r\n                <CommentsContainer />                  \r\n        )\r\n    }\r\n    else return <h4>Идёт загрузка комментариев</h4>\r\n}\r\n\r\nexport default Comments","import Comments from \"./comments\";\r\n\r\nexport default Comments","import React, {Component, Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport withHackerNewsService from '../../hoc';\r\nimport compose from '../utils';\r\nimport { Card } from \"react-bootstrap\";\r\nimport Comments from \"../comments\";\r\nimport { fetchOpenedNews, fetchSubcomments, addSubcommentsId} from \"../../actions\";\r\nimport Loader from \"../loader\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport class OpenNewsPage extends Component {    \r\n    componentDidMount() {\r\n        const state = this.props;\r\n        const {newsId} = state.freshNews;  \r\n        state.fetchOpenedNews(newsId)\r\n        setInterval(() => {\r\n          state.fetchOpenedNews(newsId);\r\n        }, 60000);\r\n    }   \r\n\r\n\r\n  \r\n\r\n    render() {\r\n        if(sessionStorage.getItem(\"is_reloaded\")) {\r\n      console.log('Страница перезагружена')\r\n    }\r\n        const state = this.props;\r\n        const {fetchSubcomments, addSubcommentsId} = this.props;\r\n        const {news, comments, commentsLoading, newsId} = state.freshNews;       \r\n        const res = window.location.pathname.split('/open-news/').pop();\r\n        let result = news.find(item => item.id == res);\r\n        const OpenNewsPageContainer = () => {\r\n            return (\r\n              <Fragment>\r\n              <Link to=\"/\"><Button>Вернуться к списку новостей</Button></Link>\r\n                <Card>\r\n                <Card.Img variant=\"top\" src={result.item} />\r\n                <Card.Body>\r\n                  <Card.Title>{result.title}</Card.Title>\r\n                  <Card.Text>\r\n                    Author: <span>{result.by}</span>\r\n                  </Card.Text> \r\n                  <Card.Text>\r\n                  <span>{result.text}</span>\r\n                  </Card.Text> \r\n                  <Card.Text>\r\n                    Original: <span>{result.url}</span>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Raiting: <span>{result.score}</span>\r\n                  </Card.Text>              \r\n                </Card.Body>\r\n              </Card>\r\n              </Fragment>\r\n            )\r\n        }\r\n\r\n        const CommentsBlock = () => {\r\n          const onClickUpdateComments = () =>{\r\n            state.fetchOpenedNews(newsId)\r\n          }\r\n          if (commentsLoading) {\r\n            return (\r\n              <Fragment>\r\n            <h4 className=\"open-news__comments-h4\">Комментарии</h4><Button onClick={onClickUpdateComments} className=\"open-news__comments-button\">Обновить комментарии</Button>\r\n            <Comments comments={comments} commentsLoading={commentsLoading}  fetchSubcomments={fetchSubcomments} addSubcommentsId={addSubcommentsId}/></Fragment>\r\n            )\r\n          }\r\n          else return <Loader />\r\n        }\r\n\r\n        if(result) {\r\n        return (\r\n            <section className=\"open-news\">\r\n                <OpenNewsPageContainer />\r\n                <CommentsBlock />\r\n            </section>\r\n        )      \r\n        } else return <h2>Ololo</h2>\r\n}}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n} \r\n  \r\n  const mapDispatchToProps =(dispatch, ownProps) => {\r\n      const {hackerNewsService} = ownProps\r\n      return {\r\n        fetchOpenedNews: (res) => dispatch(fetchOpenedNews(hackerNewsService, res)()),\r\n        addSubcommentsId: (id) => dispatch(addSubcommentsId(id)),\r\n        fetchSubcomments: (res) => dispatch(fetchSubcomments(hackerNewsService, res)())\r\n      }\r\n  }\r\n\r\n\r\n  export default compose( \r\n    withHackerNewsService(),\r\n  connect(mapStateToProps, mapDispatchToProps))(OpenNewsPage)","export default __webpack_public_path__ + \"static/media/me.1ceab910.jpeg\";","import Footer from \"./footer\";\r\n\r\nexport default Footer","import React from \"react\";\r\nimport me from \"../../images/me.jpeg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <img src={me}></img>\r\n            <div className=\"footer__description\">\r\n                <p>Привет! Меня зовут Иван. Я фронтенд разработчик.</p>\r\n                <p>Данный проект является тестовым заданием от Avito-tech.</p>\r\n                <p>Приложение позволяет получить актуальные новости с оффициального API \"Hacker News\", перейти на струницу с для подробной информации о заинтересовавшей новости и ознакомиться с комментариями к ней.</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {Component} from \"react\";\nimport Header from \"../header\";\nimport NewsListPage from \"../pages/news-list-page\";\nimport OpenNewsPage from \"../pages/open-news-page\";\nimport { BrowserRouter as Router, Navigate} from \"react-router-dom\";\nimport { Routes, Route } from \"react-router\";\nimport Footer from \"../footer\";\nimport { connect } from \"react-redux\";\nimport { fetchNews } from \"../../actions\";\nimport withHackerNewsService from '../../hoc';\nimport compose from '../utils';\n\n    export class App  extends Component {\n      componentDidMount() {\n        this.props.fetchNews();\n        setInterval(() => {\n          this.props.fetchNews();\n        }, 60000)        \n      }\n\n      render () {\n        return (\n          <Router> \n            <Header />\n            <Routes>\n              <Route path=\"/hacker-news-interface-app/\" element={<NewsListPage />} />\n              <Route path=\"/*\" element={<NewsListPage />} />\n              <Route path=\"/open-news/*\" element={<OpenNewsPage />} />\n              <Route path=\"*\"  element={<Navigate to=\"/\" />}    />\n            </Routes>\n            <Footer />\n          </Router>\n        );\n      }\n    }\n\n    const mapStateToProps = (state) => {\n      return state\n    }\n    \n    const mapDispatchToProps =(dispatch, ownProps) => {\n        const {hackerNewsService} = ownProps\n        return {\n          fetchNews: () => dispatch(fetchNews(hackerNewsService)())\n        }\n    }\n    export default compose( \n      withHackerNewsService(),\n    connect(mapStateToProps, mapDispatchToProps))(App)\n","import App from \"./app\";\r\n\r\nexport default App","export default class HackerNewsService {\r\n    apiBase = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n    async getNumbersOfFreshNews () {\r\n        let res = await fetch(`${this.apiBase}/topstories.json?print=pretty`);                \r\n        if (!res.ok) {          \r\n            throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n        };\r\n        return res.json();\r\n    }\r\n\r\n    async getNumbersOfComments (url) {\r\n        let res = await fetch(`${this.apiBase}/item/${url}.json?print=pretty`)\r\n        return res.json()\r\n    }\r\n\r\n   getNewsList = async () => {       \r\n            let res = await this.getNumbersOfFreshNews(); \r\n            let newArr =[]  \r\n            for(let i=0; i < 20; i++) {\r\n            await fetch(`${this.apiBase}/item/${res[i]}.json?print=pretty`)\r\n                .then((res) => res.json())\r\n                .then((result) => newArr.push(result))\r\n                .catch()\r\n            }\r\n            return newArr.map(this.transformNews)\r\n        \r\n    }\r\n\r\n    getCommentsList = async (url) => {\r\n        let resp = await this.getNumbersOfComments(url);\r\n        const comments = resp.kids\r\n        let newArr = [];\r\n        for(let i=0; i < comments.length; i++) {\r\n            await fetch(`${this.apiBase}/item/${comments[i]}.json?print=pretty`)\r\n                .then((res) => res.json())\r\n                .then((result) => newArr.push(result))\r\n                .catch()\r\n        }\r\n        return newArr.map(this.transformComments)\r\n        \r\n    }\r\n\r\n    getSubcommentsList = async (urlList) => {\r\n        if(urlList) {\r\n            let newArr = []\r\n            for(let i=0; i < urlList.length; i++) {\r\n                await fetch(`${this.apiBase}/item/${urlList[i]}.json?print=pretty`)\r\n                    .then((res) => res.json())\r\n                    .then((result) => newArr.push(result))\r\n                    .catch()\r\n            }\r\n        return newArr.map(this.transformComments)\r\n        }\r\n        else return null\r\n    }\r\n\r\n    transformNews = (news) => {\r\n        const newsDate = new Date(news.time);\r\n        return {\r\n            by: news.by,\r\n            score: news.score,\r\n            date:  newsDate.toString(),\r\n            id: news.id,\r\n            title: news.title,\r\n            url: news.url,\r\n            img: news.img, \r\n            comments: news.kids,\r\n            link: `/open-news/${news.id}`\r\n        }\r\n    }\r\n\r\n    transformComments = (comment) => {\r\n        return {\r\n            text: comment.text,\r\n            by: comment.by,\r\n            id: comment.id,\r\n            subcommentsNums: comment.kids,\r\n            button: '',\r\n            parentId: comment.parent\r\n        }\r\n    }\r\n\r\n    \r\n}","import HackerNewsService from \"./hacker-news-service\";\r\n\r\nexport default HackerNewsService","const updateFreshNews = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            news: [],\r\n            newsId: '',\r\n            comments: [],\r\n            commentsLoading: true,\r\n            newsLoading: false,\r\n            newsError: false         \r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_NEWS':\r\n            return {\r\n                ...state.freshNews,\r\n                news: action.payload,\r\n                newsLoading: true\r\n            }      \r\n        case 'ADD_NEWS_ID':\r\n            return {\r\n                ...state.freshNews,\r\n                newsId: action.payload\r\n            }   \r\n        case 'FETCH_COMMENTS' : \r\n            return {\r\n                ...state.freshNews,\r\n                comments: action.payload\r\n            }\r\n        case 'ADD_SUBCOMMENTS_ID':\r\n            return {\r\n                ...state.freshNews,\r\n                subcommentsId: action.payload\r\n            }\r\n            \r\n        case 'FETCH_SUBCOMMENTS':\r\n            //get state\r\n            let newState = {...state.freshNews};\r\n            //get subcomment parent id and comments\r\n            let {subcommentsId, comments}  = newState;\r\n            //check subcomments id and render \r\n            comments.map(comment => {                \r\n                if(subcommentsId == comment.id) {\r\n                    if (action.payload) {comment.subcomment=[...action.payload]}                    \r\n                    comment.button=\"hidden\"\r\n                    }\r\n                })            \r\n\r\n            return {\r\n                ...newState\r\n            }\r\n        default: return state.freshNews\r\n    }\r\n}\r\n\r\nexport default updateFreshNews","import updateFreshNews from \"./updateFreshNews\";\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        freshNews: updateFreshNews(state, action)\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer","import reducer from \"./reducers\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst logMiddleware = ({ getState } ) => (next) => (action) => {\r\n \r\n    return next(action);\r\n} \r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './styles/index.sass';\nimport './styles/css/index.css';\nimport { Provider } from \"react-redux\";\nimport HackerNewsService from './services';\nimport { HackerNewsServiceProvider } from './components/hacker-news-service-context';\nimport store from './store';\n\nconst hackerNewsService = new HackerNewsService();\nReactDOM.render(\n  <Provider store={store}>\n    <HackerNewsServiceProvider value={hackerNewsService}>\n      <App />\n    </HackerNewsServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}