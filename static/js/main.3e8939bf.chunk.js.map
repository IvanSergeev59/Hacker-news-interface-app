{"version":3,"sources":["images/logo.jpg","components/header/index.js","components/header/header.js","components/freshNews/index.js","components/freshNews/freshNews.js","actions/index.js","components/pages/news-list-page.js","components/hacker-news-service-context/hackerNewsServiceContext.js","hoc/index.js","hoc/witHackerNewsService.js","components/utils/utils.js","components/utils/index.js","components/pages/open-news-page.js","images/me.jpeg","components/footer/index.js","components/footer/footer.js","components/app/app.js","components/app/index.js","services/hacker-news-service.js","services/index.js","reducers/updateFreshNews.js","reducers/index.js","store.js","index.js"],"names":["Header","className","to","src","logo","FreshNews","news","state","freshNews","console","log","map","item","Card","style","width","Body","Title","title","Text","by","score","date","link","Button","variant","id","addIdOfChoosenNews","type","payload","NewsListPage","this","props","Component","connect","React","createContext","HackerNewsServiceProvider","Provider","HackerNewsServiceConsumer","Consumer","withHackerNewsService","Wrapped","hackerNewsService","compose","funcs","comp","reduceRight","wrapped","f","OpenNewsPage","fetchOpenedNews","res","window","location","pathname","split","pop","result","find","Img","url","dispatch","ownProps","Footer","me","App","fetchNews","path","element","getNewsList","then","data","fetchNewsList","catch","err","HackerNewsService","apiBase","a","getNumbersOfFreshNews","ololo","i","fetch","json","push","transformNews","newsDate","Date","time","toString","img","comments","kids","ok","Error","status","updateFreshNews","action","undefined","newsId","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.3e8939bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.eb202774.jpg\";","import Header from \"./header\";\r\n\r\nexport default Header","import React from \"react\";\r\nimport logo from \"../../images/logo.jpg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <Link to=\"/\"><img src={logo}></img></Link>\r\n            <h1>Что в мире творится?</h1>\r\n            <p>Находите самые актуальные новости, посвященные информатике и предпринимательству, а также, комментарии к ним!</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import FreshNews from \"./freshNews\";\r\n\r\nexport default FreshNews","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FreshNews = ({state}) => {\r\n    const {news} = state.freshNews;\r\n    console.log(news)\r\n        return (\r\n            news.map (                \r\n                item => \r\n                <li key={item.id}>\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Card.Text>\r\n                        {item.by}<br />\r\n                        {item.score}<br />\r\n                        {item.date}\r\n                        \r\n                        </Card.Text>\r\n                        <Link to={item.link}><Button variant=\"primary\">More</Button></Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </li>\r\n            ))}\r\n\r\nexport default FreshNews","const fetchNewsList = (data) => {\r\n    return {\r\n        type: 'FETCH_NEWS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst addIdOfChoosenNews = (id) => {\r\n    return {\r\n        type: 'ADD_NEWS_ID',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst fetchNews = (hackerNewsService) => () => (dispatch) => {\r\n    console.log\r\n    hackerNewsService.getNewsList()\r\n    .then((data) => dispatch(fetchNewsList(data)))\r\n    .catch((err) => \r\n        console.log(err))\r\n       \r\n}\r\n\r\nexport {fetchNews, addIdOfChoosenNews}","import {React, Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FreshNews from \"../freshNews\";\r\nimport { addIdOfChoosenNews } from \"../../actions\";\r\n\r\n\r\nexport class NewsListPage extends Component   {\r\n    \r\n    render() {\r\n        const {state} = this.props;\r\n        return (\r\n            <div className=\"news-list\">\r\n                <ul className=\"news-list_ul\">\r\n                    <FreshNews state={state} addIdOfChoosenNews={addIdOfChoosenNews}/>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n} \r\n\r\nexport default connect(mapStateToProps)(NewsListPage)\r\n","import React from \"react\";\r\n\r\nconst {\r\n    Provider: HackerNewsServiceProvider,\r\n    Consumer: HackerNewsServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    HackerNewsServiceProvider,\r\n    HackerNewsServiceConsumer\r\n}","import withHackerNewsService from './witHackerNewsService'\r\n\r\nexport default withHackerNewsService","import React from \"react\";\r\nimport { HackerNewsServiceConsumer } from \"../components/hacker-news-service-context\";\r\n\r\nconst withHackerNewsService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <HackerNewsServiceConsumer>\r\n                {\r\n                    (hackerNewsService) => {\r\n                        return (<Wrapped {...props}\r\n                            hackerNewsService={hackerNewsService} />)\r\n                    }\r\n                }\r\n            </HackerNewsServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withHackerNewsService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n    };\r\n\r\nexport default compose","import compose from \"./utils\";\r\n\r\nexport default compose","import {React, Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport withHackerNewsService from '../../hoc';\r\nimport compose from '../utils';\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport class OpenNewsPage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchOpenedNews()\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {state} = this.props;\r\n        const {news} = state.freshNews;\r\n        const res = window.location.pathname.split('/open-news/').pop();\r\n        let result = news.find(item => item.id == res);\r\n        return (\r\n            <Card>\r\n            <Card.Img variant=\"top\" src={result.item} />\r\n            <Card.Body>\r\n              <Card.Title>{result.title}</Card.Title>\r\n              <Card.Text>\r\n                {result.url}\r\n              </Card.Text>             \r\n            </Card.Body>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n} \r\n  \r\n  const mapDispatchToProps =(dispatch, ownProps) => {\r\n      const {hackerNewsService} = ownProps\r\n      return {\r\n        fetchOpenedNews: () => console.log('openedNews')\r\n      }\r\n  }\r\n  export default compose( \r\n    withHackerNewsService(),\r\n  connect(mapStateToProps, mapDispatchToProps))(OpenNewsPage)","export default __webpack_public_path__ + \"static/media/me.1ceab910.jpeg\";","import Footer from \"./footer\";\r\n\r\nexport default Footer","import React from \"react\";\r\nimport me from \"../../images/me.jpeg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <img src={me}></img>\r\n            <div className=\"footer__description\">\r\n                <p>Привет! Меня зовут Иван. Я фронтенд разработчик.</p>\r\n                <p>Данный проект является тестовым заданием от Avito-tech.</p>\r\n                <p>Приложение позволяет получить актуальные новости с оффициального API \"Hacker News\", перейти на струницу с для подробной информации о заинтересовавшей новости и ознакомиться с комментариями к ней.</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {Component} from \"react\";\nimport Header from \"../header\";\nimport NewsListPage from \"../pages/news-list-page\";\nimport OpenNewsPage from \"../pages/open-news-page\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Routes, Route } from \"react-router\";\nimport Footer from \"../footer\";\nimport { connect } from \"react-redux\";\nimport { fetchNews } from \"../../actions\";\nimport withHackerNewsService from '../../hoc'\nimport compose from '../utils'\n\n\n    export class App  extends Component {\n      componentDidMount() {\n        this.props.fetchNews();\n      }\n\n      render () {\n        return (\n          <Router> \n            <Header />\n            <Routes>\n              <Route path=\"/hacker-news-interface-app/\" element={<NewsListPage />} />\n              <Route path=\"/*\" element={<NewsListPage />} /> \n              <Route path=\"/open-news/\" element={<OpenNewsPage />} />\n              <Route path=\"/open-news/*\" element={<OpenNewsPage />} />\n            </Routes>\n            <Footer />\n          </Router>\n        );\n      }\n    }\n\n    const mapStateToProps = (state) => {\n      return state\n    }\n    \n    const mapDispatchToProps =(dispatch, ownProps) => {\n        const {hackerNewsService} = ownProps\n        return {\n          fetchNews: () => dispatch(fetchNews(hackerNewsService)())\n        }\n    }\n    export default compose( \n      withHackerNewsService(),\n    connect(mapStateToProps, mapDispatchToProps))(App)\n","import App from \"./app\";\r\n\r\nexport default App","import axios from 'axios'\r\n\r\nexport default class HackerNewsService {\r\n    apiBase = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n    async getNumbersOfFreshNews () {\r\n        let res = await fetch(`${this.apiBase}/topstories.json?print=pretty`);                \r\n        if (!res.ok) {          \r\n            throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n        };\r\n        return res.json();\r\n    }\r\n\r\n   getNewsList = async () => {       \r\n            let res = await this.getNumbersOfFreshNews(); \r\n            let ololo =[]  \r\n            for(let i=0; i < 3; i++) {\r\n            await fetch(`${this.apiBase}/item/${res[i]}.json?print=pretty`)\r\n                .then((res) => res.json())\r\n                .then((result) => ololo.push(result))\r\n                .catch()\r\n            }\r\n            return ololo.map(this.transformNews)\r\n        \r\n    }\r\n\r\n    transformNews = (news) => {\r\n        const newsDate = new Date(news.time);\r\n        return {\r\n            by: news.by,\r\n            score: news.score,\r\n            date:  newsDate.toString(),\r\n            id: news.id,\r\n            title: news.title,\r\n            url: news.url,\r\n            img: news.img, \r\n            comments: news.kids,\r\n            link: `/open-news/${news.id}`\r\n        }\r\n    }\r\n\r\n\r\n    \r\n}","import HackerNewsService from \"./hacker-news-service\";\r\n\r\nexport default HackerNewsService","const updateFreshNews = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            news: [],\r\n            newsId: ''\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_NEWS':\r\n            return {\r\n                ...state.updateFreshNews,\r\n                news: action.payload\r\n            }      \r\n        case 'FETCH_NEWS':\r\n            return {\r\n                ...state.updateFreshNews,\r\n                newsId: action.payload\r\n            }   \r\n        default: return state.updateFreshNews\r\n    }\r\n}\r\n\r\nexport default updateFreshNews","import updateFreshNews from \"./updateFreshNews\";\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        freshNews: updateFreshNews(state, action)\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer","import reducer from \"./reducers\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst logMiddleware = ({ getState } ) => (next) => (action) => {\r\n \r\n    return next(action);\r\n} \r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './styles/index.sass';\nimport './styles/css/index.css';\nimport { Provider } from \"react-redux\";\nimport HackerNewsService from './services';\nimport { HackerNewsServiceProvider } from './components/hacker-news-service-context';\nimport store from './store';\n\nconst hackerNewsService = new HackerNewsService();\nconsole.log(store)\nReactDOM.render(\n  <Provider store={store}>\n    <HackerNewsServiceProvider value={hackerNewsService}>\n      <App />\n    </HackerNewsServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}