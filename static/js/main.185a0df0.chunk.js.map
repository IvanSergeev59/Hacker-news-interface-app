{"version":3,"sources":["images/logo.jpg","components/header/index.js","components/header/header.js","components/loader/index.js","components/loader/loader.js","components/freshNews/index.js","components/freshNews/freshNews.js","components/pages/news-list-page.js","actions/index.js","components/hacker-news-service-context/hackerNewsServiceContext.js","hoc/index.js","hoc/witHackerNewsService.js","components/utils/utils.js","components/utils/index.js","components/comments/comments.js","components/comments/index.js","components/pages/open-news-page.js","images/me.jpeg","components/footer/index.js","components/footer/footer.js","components/app/app.js","components/app/index.js","services/hacker-news-service.js","services/index.js","reducers/updateFreshNews.js","reducers/index.js","store.js","index.js"],"names":["Header","className","to","src","logo","Loader","FreshNews","props","news","addId","newsLoading","newsError","FreshNewsContainer","map","item","Card","Body","Title","title","Text","by","score","date","link","onClick","event","target","name","Button","id","variant","NewsListPage","this","state","freshNews","Component","connect","dispatch","type","payload","addIdOfChoosenNews","React","createContext","HackerNewsServiceProvider","Provider","HackerNewsServiceConsumer","Consumer","withHackerNewsService","Wrapped","hackerNewsService","compose","funcs","comp","reduceRight","wrapped","f","SubComments","subcomment","comment","dangerouslySetInnerHTML","__html","text","Comments","comments","commentsLoading","fetchSubcomments","addSubcommentsId","CommentsContainer","button","classList","add","onClickButtonSubcomments","subcommentsNums","OpenNewsPage","newsId","fetchOpenedNews","setInterval","res","window","location","pathname","split","pop","result","find","OpenNewsPageContainer","Img","url","CommentsBlock","ownProps","getCommentsList","then","data","fetchComments","catch","err","console","log","getSubcommentsList","fetchSubcommentsList","Footer","me","App","fetchNews","path","element","getNewsList","fetchNewsList","HackerNewsService","apiBase","a","getNumbersOfFreshNews","newArr","i","fetch","json","push","transformNews","getNumbersOfComments","resp","kids","length","transformComments","urlList","newsDate","Date","time","toString","img","parentId","parent","ok","Error","status","updateFreshNews","action","undefined","subcommentsId","newState","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.185a0df0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.eb202774.jpg\";","import Header from \"./header\";\r\n\r\nexport default Header","import React from \"react\";\r\nimport logo from \"../../images/logo.jpg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <Link to=\"/\"><img src={logo}></img></Link>\r\n            <h1>Что в мире творится?</h1>\r\n            <p>Находите самые актуальные новости, посвященные информатике и предпринимательству, а также, комментарии к ним!</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Loader from \"./loader\";\r\n\r\nexport default Loader","const Loader = () => {\r\n    return (\r\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import FreshNews from \"./freshNews\";\r\n\r\nexport default FreshNews","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport  Button  from \"react-bootstrap/button\";\r\nimport Loader from \"../loader\";\r\n\r\n\r\nconst FreshNews = (props) => { \r\n    const {news, addId, newsLoading, newsError} = props;\r\n    \r\n    let FreshNewsContainer = newsLoading & !newsError ?  \r\n        news.map (                \r\n            item => \r\n            <li key={item.id}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>{item.title}</Card.Title>\r\n                    <Card.Text>\r\n                    Author: <span>{item.by}</span><br />\r\n                    Rating: <span>{item.score}</span><br />\r\n                    \r\n                    dated: <span>{item.date}</span>\r\n                    \r\n                    </Card.Text>\r\n                    <Link to={item.link} onClick={(event) => addId(event.target.name)}><Button name ={item.id} variant=\"primary\">More</Button></Link>\r\n                </Card.Body>\r\n                </Card>\r\n            </li>\r\n        )\r\n        :\r\n        <Loader />\r\n    FreshNewsContainer =  newsError ? <h3>Ошибка при загрузке</h3>    : FreshNewsContainer\r\n        \r\n    return FreshNewsContainer\r\n}\r\nexport default FreshNews","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FreshNews from \"../freshNews\";\r\nimport { addIdOfChoosenNews } from \"../../actions\";\r\n\r\nexport class NewsListPage extends Component  {\r\n    render () {\r\n        const {state, addId} = this.props;\r\n        const {news, newsLoading, newsError} = state.freshNews     \r\n        return (\r\n            <div className=\"news-list\">\r\n                <ul className=\"news-list_ul\">\r\n                    <FreshNews news={news} addId={addId} newsLoading={newsLoading} newsError={newsError}/>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n} \r\n  \r\n  const mapDispatchToProps =(dispatch) => {\r\n      \r\n      return {\r\n        addId: (item) => dispatch(addIdOfChoosenNews(item))\r\n      }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsListPage)","const fetchNewsList = (data) => {\r\n    return {\r\n        type: 'FETCH_NEWS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst addIdOfChoosenNews = (item) => {\r\n    return {\r\n        type: 'ADD_NEWS_ID',\r\n        payload: item\r\n    }\r\n}\r\n\r\nconst fetchComments = (data) => {\r\n    return {\r\n        type: 'FETCH_COMMENTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchSubcommentsList = (data) => {\r\n    return {\r\n        type: 'FETCH_SUBCOMMENTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst addSubcommentsId = (id) => {\r\n    return {\r\n        type: 'ADD_SUBCOMMENTS_ID',\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst fetchNews = (hackerNewsService) => () => (dispatch) => {\r\n    hackerNewsService.getNewsList()\r\n    .then((data) => dispatch(fetchNewsList(data)))\r\n    .catch((err) => console.log(err))       \r\n}\r\n\r\nconst fetchOpenedNews = (hackerNewsService, res) => () => (dispatch) => {\r\n    hackerNewsService.getCommentsList(res)\r\n    .then((data) => dispatch(fetchComments(data)))\r\n    .catch((err) => console.log(err))    \r\n}\r\n\r\nconst fetchSubcomments = (hackerNewsService, res) => () => (dispatch) => {\r\n    hackerNewsService.getSubcommentsList(res)\r\n    .then((data) => dispatch(fetchSubcommentsList(data)))\r\n    .catch((err) => console.log(err))    \r\n}\r\n\r\nexport {fetchNews, addIdOfChoosenNews, fetchOpenedNews, fetchSubcomments, addSubcommentsId}","import React from \"react\";\r\n\r\nconst {\r\n    Provider: HackerNewsServiceProvider,\r\n    Consumer: HackerNewsServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    HackerNewsServiceProvider,\r\n    HackerNewsServiceConsumer\r\n}","import withHackerNewsService from './witHackerNewsService'\r\n\r\nexport default withHackerNewsService","import React from \"react\";\r\nimport { HackerNewsServiceConsumer } from \"../components/hacker-news-service-context\";\r\n\r\nconst withHackerNewsService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <HackerNewsServiceConsumer>\r\n                {\r\n                    (hackerNewsService) => {\r\n                        return (<Wrapped {...props}\r\n                            hackerNewsService={hackerNewsService} />)\r\n                    }\r\n                }\r\n            </HackerNewsServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withHackerNewsService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n    };\r\n\r\nexport default compose","import compose from \"./utils\";\r\n\r\nexport default compose","import React from \"react\";\r\nimport Button from \"react-bootstrap/button\";\r\n\r\n    const SubComments = (props) => {  \r\n        const {subcomment} = props\r\n        if (!subcomment) {\r\n              return null\r\n        }\r\n           \r\n        else {\r\n         return (\r\n                props.subcomment.map(\r\n                comment =>                   \r\n                <div key={comment.id} className=\"open-news__comments\">\r\n                    <p className=\"open-subcomments-p\">Author: {comment.by}</p>\r\n                    <p className=\"open-subcomments-p\" dangerouslySetInnerHTML={{__html: comment.text}}></p>     \r\n                    \r\n                </div>  \r\n            )\r\n           \r\n            )}\r\n    }\r\n\r\nconst Comments = (props) => {\r\n    let {comments, commentsLoading, fetchSubcomments, addSubcommentsId} = props;\r\n    const onClickButtonSubcomments = (event, comment) => {\r\n        event.target.classList.add('.hidden')\r\n        addSubcommentsId(event.target.name);\r\n        fetchSubcomments(comment)\r\n    }\r\n    const CommentsContainer = () => {       \r\n        return (         \r\n            comments.map(\r\n                comment =>                   \r\n                <div key={comment.id} className=\"open-news__comments\">\r\n                    <p className=\"open-comments-p\">Author: {comment.by}</p>\r\n                    <p className=\"open-comments-p\" dangerouslySetInnerHTML={{__html: comment.text}}></p>\r\n                    <Button className={comment.button} name={comment.id} onClick={(event) => onClickButtonSubcomments(event, comment.subcommentsNums)}>open comments</Button>\r\n                    <SubComments subcomment={comment.subcomment}/>\r\n                </div>  \r\n            )\r\n        )\r\n    }\r\n\r\n \r\n    \r\n    if (commentsLoading) {\r\n        return (\r\n            \r\n                <CommentsContainer />\r\n                \r\n            \r\n        )\r\n    }\r\n    else return <h4>Идёт загрузка комментариев</h4>\r\n}\r\n\r\nexport default Comments","import Comments from \"./comments\";\r\n\r\nexport default Comments","import React, {Component, Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport withHackerNewsService from '../../hoc';\r\nimport compose from '../utils';\r\nimport { Card } from \"react-bootstrap\";\r\nimport Comments from \"../comments\";\r\nimport { fetchOpenedNews, fetchSubcomments, addSubcommentsId} from \"../../actions\";\r\nimport Loader from \"../loader\";\r\nimport Button from \"react-bootstrap/button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class OpenNewsPage extends Component {\r\n\r\n    componentDidMount() {\r\n        const state = this.props;\r\n        const {newsId} = state.freshNews;  \r\n        state.fetchOpenedNews(newsId)\r\n        setInterval(() => {\r\n          state.fetchOpenedNews(newsId);\r\n        }, 60000) \r\n    }   \r\n\r\n    render() {\r\n        const state = this.props;\r\n        const {fetchSubcomments, addSubcommentsId} = this.props;\r\n        const {news, comments, commentsLoading, newsId} = state.freshNews;       \r\n        const res = window.location.pathname.split('/open-news/').pop();\r\n        let result = news.find(item => item.id == res);\r\n        const OpenNewsPageContainer = () => {\r\n            return (\r\n              <Fragment>\r\n              <Link to=\"/\"><Button>Вернуться к списку новостей</Button></Link>\r\n                <Card>\r\n                <Card.Img variant=\"top\" src={result.item} />\r\n                <Card.Body>\r\n                  <Card.Title>{result.title}</Card.Title>\r\n                  <Card.Text>\r\n                    Author: <span>{result.by}</span>\r\n                  </Card.Text> \r\n                  <Card.Text>\r\n                  <span>{result.text}</span>\r\n                  </Card.Text> \r\n                  <Card.Text>\r\n                    Original: <span>{result.url}</span>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Raiting: <span>{result.score}</span>\r\n                  </Card.Text>              \r\n                </Card.Body>\r\n              </Card>\r\n              </Fragment>\r\n            )\r\n        }\r\n\r\n        const CommentsBlock = () => {\r\n          const onClickUpdateComments = () =>{\r\n            state.fetchOpenedNews(newsId)\r\n          }\r\n          if (commentsLoading) {\r\n            return (\r\n              <Fragment>\r\n            <h4 className=\"open-news__comments-h4\">Комментарии</h4><Button onClick={onClickUpdateComments} className=\"open-news__comments-button\">Обновить комментарии</Button>\r\n            <Comments comments={comments} commentsLoading={commentsLoading}  fetchSubcomments={fetchSubcomments} addSubcommentsId={addSubcommentsId}/></Fragment>\r\n            )\r\n          }\r\n          else return <Loader />\r\n        }\r\n\r\n        return (\r\n            <section className=\"open-news\">\r\n                <OpenNewsPageContainer />\r\n                <CommentsBlock />\r\n            </section>\r\n        )      \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n} \r\n  \r\n  const mapDispatchToProps =(dispatch, ownProps) => {\r\n      const {hackerNewsService} = ownProps\r\n      return {\r\n        fetchOpenedNews: (res) => dispatch(fetchOpenedNews(hackerNewsService, res)()),\r\n        addSubcommentsId: (id) => dispatch(addSubcommentsId(id)),\r\n        fetchSubcomments: (res) => dispatch(fetchSubcomments(hackerNewsService, res)())\r\n      }\r\n  }\r\n  export default compose( \r\n    withHackerNewsService(),\r\n  connect(mapStateToProps, mapDispatchToProps))(OpenNewsPage)","export default __webpack_public_path__ + \"static/media/me.1ceab910.jpeg\";","import Footer from \"./footer\";\r\n\r\nexport default Footer","import React from \"react\";\r\nimport me from \"../../images/me.jpeg\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <img src={me}></img>\r\n            <div className=\"footer__description\">\r\n                <p>Привет! Меня зовут Иван. Я фронтенд разработчик.</p>\r\n                <p>Данный проект является тестовым заданием от Avito-tech.</p>\r\n                <p>Приложение позволяет получить актуальные новости с оффициального API \"Hacker News\", перейти на струницу с для подробной информации о заинтересовавшей новости и ознакомиться с комментариями к ней.</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {Component} from \"react\";\nimport Header from \"../header\";\nimport NewsListPage from \"../pages/news-list-page\";\nimport OpenNewsPage from \"../pages/open-news-page\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { Routes, Route } from \"react-router\";\nimport Footer from \"../footer\";\nimport { connect } from \"react-redux\";\nimport { fetchNews } from \"../../actions\";\nimport withHackerNewsService from '../../hoc'\nimport compose from '../utils'\n\n\n    export class App  extends Component {\n      componentDidMount() {\n        this.props.fetchNews();\n        setInterval(() => {\n          this.props.fetchNews();\n        }, 60000)        \n      }\n\n      render () {\n        return (\n          <Router> \n            <Header />\n            <Routes>\n              <Route path=\"/hacker-news-interface-app/\" element={<NewsListPage />} />\n              <Route path=\"/*\" element={<NewsListPage />} /> \n              <Route path=\"/open-news/\" element={<OpenNewsPage />} />\n              <Route path=\"/open-news/*\" element={<OpenNewsPage />} />\n            </Routes>\n            <Footer />\n          </Router>\n        );\n      }\n    }\n\n    const mapStateToProps = (state) => {\n      return state\n    }\n    \n    const mapDispatchToProps =(dispatch, ownProps) => {\n        const {hackerNewsService} = ownProps\n        return {\n          fetchNews: () => dispatch(fetchNews(hackerNewsService)())\n        }\n    }\n    export default compose( \n      withHackerNewsService(),\n    connect(mapStateToProps, mapDispatchToProps))(App)\n","import App from \"./app\";\r\n\r\nexport default App","export default class HackerNewsService {\r\n    apiBase = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n    async getNumbersOfFreshNews () {\r\n        let res = await fetch(`${this.apiBase}/topstories.json?print=pretty`);                \r\n        if (!res.ok) {          \r\n            throw new Error (`Could not fetch ${this.apiBase}` + ` , received ${res.status}`)\r\n        };\r\n        return res.json();\r\n    }\r\n\r\n    async getNumbersOfComments (url) {\r\n        let res = await fetch(`${this.apiBase}/item/${url}.json?print=pretty`)\r\n        return res.json()\r\n    }\r\n\r\n   getNewsList = async () => {       \r\n            let res = await this.getNumbersOfFreshNews(); \r\n            let newArr =[]  \r\n            for(let i=0; i < 3; i++) {\r\n            await fetch(`${this.apiBase}/item/${res[i]}.json?print=pretty`)\r\n                .then((res) => res.json())\r\n                .then((result) => newArr.push(result))\r\n                .catch()\r\n            }\r\n            return newArr.map(this.transformNews)\r\n        \r\n    }\r\n\r\n    getCommentsList = async (url) => {\r\n        let resp = await this.getNumbersOfComments(url);\r\n        const comments = resp.kids\r\n        let newArr = [];\r\n        for(let i=0; i < comments.length; i++) {\r\n            await fetch(`${this.apiBase}/item/${comments[i]}.json?print=pretty`)\r\n                .then((res) => res.json())\r\n                .then((result) => newArr.push(result))\r\n                .catch()\r\n        }\r\n        return newArr.map(this.transformComments)\r\n        \r\n    }\r\n\r\n    getSubcommentsList = async (urlList) => {\r\n        if(urlList) {\r\n            let newArr = []\r\n            for(let i=0; i < urlList.length; i++) {\r\n                await fetch(`${this.apiBase}/item/${urlList[i]}.json?print=pretty`)\r\n                    .then((res) => res.json())\r\n                    .then((result) => newArr.push(result))\r\n                    .catch()\r\n            }\r\n        return newArr.map(this.transformComments)\r\n        }\r\n        else return null\r\n    }\r\n\r\n    transformNews = (news) => {\r\n        const newsDate = new Date(news.time);\r\n        return {\r\n            by: news.by,\r\n            score: news.score,\r\n            date:  newsDate.toString(),\r\n            id: news.id,\r\n            title: news.title,\r\n            url: news.url,\r\n            img: news.img, \r\n            comments: news.kids,\r\n            link: `/open-news/${news.id}`\r\n        }\r\n    }\r\n\r\n    transformComments = (comment) => {\r\n        return {\r\n            text: comment.text,\r\n            by: comment.by,\r\n            id: comment.id,\r\n            subcommentsNums: comment.kids,\r\n            button: '',\r\n            parentId: comment.parent\r\n        }\r\n    }\r\n\r\n    \r\n}","import HackerNewsService from \"./hacker-news-service\";\r\n\r\nexport default HackerNewsService","const updateFreshNews = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            news: [],\r\n            newsId: '',\r\n            comments: [],\r\n            commentsLoading: true,\r\n            newsLoading: false,\r\n            newsError: false         \r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_NEWS':\r\n            return {\r\n                ...state.freshNews,\r\n                news: action.payload,\r\n                newsLoading: true\r\n            }      \r\n        case 'ADD_NEWS_ID':\r\n            return {\r\n                ...state.freshNews,\r\n                newsId: action.payload\r\n            }   \r\n        case 'FETCH_COMMENTS' : \r\n            return {\r\n                ...state.freshNews,\r\n                comments: action.payload\r\n            }\r\n        case 'ADD_SUBCOMMENTS_ID':\r\n            return {\r\n                ...state.freshNews,\r\n                subcommentsId: action.payload\r\n            }\r\n            \r\n        case 'FETCH_SUBCOMMENTS':\r\n            //get state\r\n            let newState = {...state.freshNews};\r\n            //get subcomment parent id and comments\r\n            let {subcommentsId, comments}  = newState;\r\n            //check subcomments id and render \r\n            comments.map(comment => {                \r\n                if(subcommentsId == comment.id) {\r\n                    if (action.payload) {comment.subcomment=[...action.payload]}                    \r\n                    comment.button=\"hidden\"\r\n                    }\r\n                })            \r\n\r\n            return {\r\n                ...newState\r\n            }\r\n        default: return state.freshNews\r\n    }\r\n}\r\n\r\nexport default updateFreshNews","import updateFreshNews from \"./updateFreshNews\";\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        freshNews: updateFreshNews(state, action)\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer","import reducer from \"./reducers\";\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst logMiddleware = ({ getState } ) => (next) => (action) => {\r\n \r\n    return next(action);\r\n} \r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nconst store = createStore(reducer, applyMiddleware( thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './styles/index.sass';\nimport './styles/css/index.css';\nimport { Provider } from \"react-redux\";\nimport HackerNewsService from './services';\nimport { HackerNewsServiceProvider } from './components/hacker-news-service-context';\nimport store from './store';\n\nconst hackerNewsService = new HackerNewsService();\nReactDOM.render(\n  <Provider store={store}>\n    <HackerNewsServiceProvider value={hackerNewsService}>\n      <App />\n    </HackerNewsServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}